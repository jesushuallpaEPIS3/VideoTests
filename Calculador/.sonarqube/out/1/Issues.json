{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.9.0.0",
        "fileVersion": "4.9.2-3.24129.6 (9934fb9e)",
        "semanticVersion": "4.9.0",
        "language": "es-ES"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "El elemento campo \"calculator\" que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de declarar el elemento campo como que admite un valor NULL.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 27,
                  "endLine": 10,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 27,
                  "endLine": 10,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        },
        {
          "ruleId": "NUnit2005",
          "level": "warning",
          "message": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/OVALTECH/OneDrive%20-%20UNIVERSIDAD%20PRIVADA%20DE%20TACNA/Documentos/GitHub/VideoTests/Calculador/Calculador.WebApi.Tests/CalculatorServiceTests.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HasToleranceValue": "False",
              "IsGenericMethod": "False",
              "ModelName": "AreEqual"
            }
          }
        }
      ],
      "rules": {
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Un campo que no acepta valores NULL debe contener un valor distinto de NULL al salir del constructor. Considere la posibilidad de declararlo como que admite un valor NULL.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "NUnit2005": {
          "id": "NUnit2005",
          "shortDescription": "Consider using Assert.That(actual, Is.EqualTo(expected)) instead of Assert.AreEqual(expected, actual)",
          "fullDescription": "Consider using the constraint model, Assert.That(actual, Is.EqualTo(expected)), instead of the classic model, Assert.AreEqual(expected, actual).",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/nunit/nunit.analyzers/tree/master/documentation/NUnit2005.md",
          "properties": {
            "category": "Assertion",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}